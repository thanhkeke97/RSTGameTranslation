name: Sign BAT and EXE Files

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sign:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Locate SignTool and Setup Environment
      id: setup
      run: |
        # Tìm SignTool có sẵn trong Windows SDK của GitHub Actions
        $signtoolPath = Get-Command -Name signtool.exe -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Source
        
        if (-not $signtoolPath) {
          Write-Host "Tìm kiếm SignTool trong các đường dẫn phổ biến..."
          $possiblePaths = @(
            "C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\signtool.exe",
            "C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64\signtool.exe",
            "C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64\signtool.exe",
            "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe"
          )
          
          foreach ($path in $possiblePaths) {
            if (Test-Path $path) {
              $signtoolPath = $path
              Write-Host "Tìm thấy SignTool tại: $signtoolPath"
              break
            }
          }
        } else {
          Write-Host "SignTool đã có sẵn tại: $signtoolPath"
        }
        
        if (-not $signtoolPath) {
          Write-Error "Không tìm thấy SignTool. Quá trình ký sẽ thất bại."
          exit 1
        }
        
        # Lưu đường dẫn đầy đủ để sử dụng trong các bước tiếp theo
        "SIGNTOOL_PATH=$signtoolPath" | Out-File -FilePath $env:GITHUB_ENV -Append
      
    - name: Create Self-Signed Certificate
      run: |
        # Tạo chứng chỉ tự ký
        $certName = "RSTSigningCert"
        $certPassword = "RST@2025"
        
        $cert = New-SelfSignedCertificate -Type CodeSigningCert -Subject "CN=$certName" -CertStoreLocation "Cert:\CurrentUser\My" -NotAfter (Get-Date).AddYears(5)
        $thumbprint = $cert.Thumbprint
        Write-Host "Certificate created with thumbprint: $thumbprint"
        
        $pwd = ConvertTo-SecureString -String $certPassword -Force -AsPlainText
        Export-PfxCertificate -Cert "Cert:\CurrentUser\My\$thumbprint" -FilePath certificate.pfx -Password $pwd
        Write-Host "Certificate exported to certificate.pfx"
      
    - name: Find and Sign Files
      run: |
        # Hiển thị đường dẫn SignTool
        Write-Host "Sử dụng SignTool tại: $env:SIGNTOOL_PATH"
        
        # Tìm tất cả file .bat và .exe trong repository
        $filesToSign = @()
        $filesToSign += Get-ChildItem -Path . -Filter "*.bat" -Recurse
        $filesToSign += Get-ChildItem -Path . -Filter "*.exe" -Recurse
        
        if ($filesToSign.Count -eq 0) {
          Write-Host "Không tìm thấy file .bat hoặc .exe nào để ký"
        } else {
          Write-Host "Tìm thấy $($filesToSign.Count) file để ký"
          
          foreach ($file in $filesToSign) {
            Write-Host "Đang ký file: $($file.FullName)"
            # Sử dụng đường dẫn đầy đủ đến SignTool
            & "$env:SIGNTOOL_PATH" sign /f certificate.pfx /p "RST@2025" /t http://timestamp.digicert.com /v $file.FullName
            if ($LASTEXITCODE -eq 0) {
              Write-Host "Đã ký thành công file $($file.Name)"
            } else {
              Write-Host "Không thể ký file $($file.Name)" -ForegroundColor Red
              Write-Host "Tiếp tục với các file khác..."
              # Không thoát để có thể tiếp tục ký các file khác
            }
          }
        }
    
    - name: Upload Signed BAT Files
      uses: actions/upload-artifact@master
      with:
        name: signed-bat-files
        path: "**/*.bat"
        
    - name: Upload Signed EXE Files
      uses: actions/upload-artifact@master
      with:
        name: signed-exe-files
        path: "**/*.exe"